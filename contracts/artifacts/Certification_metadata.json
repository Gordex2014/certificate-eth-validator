{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "academyAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "academyName",
						"type": "string"
					}
				],
				"name": "AcademyCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "academy",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "certificate",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "academyName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "courseName",
						"type": "string"
					}
				],
				"name": "CertificateIssued",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "Academies",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "details",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "isRegistered",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "Admins",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_academyAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_description",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_details",
						"type": "string"
					}
				],
				"name": "addAcademy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_adminAddress",
						"type": "address"
					}
				],
				"name": "addAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_identification",
						"type": "string"
					}
				],
				"name": "addStudent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_studentAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_courseName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_issuedAt",
						"type": "uint256"
					}
				],
				"name": "addUserCertificate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_studentAddress",
						"type": "address"
					}
				],
				"name": "getUserCertificatesExperiences",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "course",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "issuer",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "issuerName",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "student",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "issuedAt",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isRegistered",
								"type": "bool"
							}
						],
						"internalType": "struct Agents.Certificate[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"AcademyCreated(address,string)": {
					"details": "New academy added event"
				},
				"CertificateIssued(address,address,string,string)": {
					"details": "New certificate issued event"
				}
			},
			"kind": "dev",
			"methods": {
				"addAcademy(address,string,string,string)": {
					"details": "Adds a new academy to the list of companies.",
					"params": {
						"_academyAddress": "The address of the academy to add.",
						"_description": "The description of the academy.",
						"_details": "Some details about the academy.",
						"_name": "The name of the academy."
					}
				},
				"addAdmin(address)": {
					"details": "Add a new admin.",
					"params": {
						"_adminAddress": "The address of the admin to add."
					}
				},
				"addStudent(string,string)": {
					"details": "Allows a normal user to register as a student.",
					"params": {
						"_identification": "The identification of the user (eg. ID).",
						"_name": "The name of the user."
					}
				},
				"addUserCertificate(address,string,string,uint256)": {
					"details": "Adds a certificate to a registered student, this function can only be called by an academy address.",
					"params": {
						"_courseName": "The name of the course",
						"_description": "A description of the course.",
						"_issuedAt": "The date when the certificate was issued.",
						"_studentAddress": "Is the address of the student."
					}
				},
				"constructor": {
					"details": "Sets the contract deployer as the first admin."
				},
				"getUserCertificatesExperiences(address)": {
					"details": "Gets the certificates for an specific student.",
					"params": {
						"_studentAddress": "The student address."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Certification.sol": "Certification"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Certification.sol": {
			"keccak256": "0x8930b402f7c1041478fdcfdd4765337c44b363ec5b41ac2127ca2429afc9a4c3",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://c8a911463281870133ef8d6b53ff2d23d793ea26d2583d9ace56f63716350495",
				"dweb:/ipfs/QmZ2GrKKCb2iaT81QJM4mTdLqL6dgoixSC8yDaKjNgtfpb"
			]
		},
		"libraries/Agents.sol": {
			"keccak256": "0xb4644bfb897ec4baaa28771c03be4eb29315a8f02fa9a82a6b16c5cf4273fff3",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://0f3f1309b2d832dda1dbdbec5e35ec3f986f5aeaf34d9dce386caa3034bb0e40",
				"dweb:/ipfs/QmPtFAhME2WARxjmcTtuib5Ldha4kKJizaYaZaP8m1b7H4"
			]
		}
	},
	"version": 1
}